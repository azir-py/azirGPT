-- Rayfield-Style UI Library (Full Feature Set + Notifications + Toggle Keybind + Draggable + Icon)
local MyRayLib = {}

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")

-- Create BlurEffect
local blur = Instance.new("BlurEffect")
blur.Size = 0
blur.Parent = game:GetService("Lighting")
TweenService:Create(blur, TweenInfo.new(0.5), {Size = 12}):Play()

-- Create UI container
local gui = Instance.new("ScreenGui")
gui.Name = "MyRayLibUI"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Fade in effect
gui.Enabled = false
task.delay(0.2, function()
    gui.Enabled = true
end)

-- UI Utility
local function createUICorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 6)
    corner.Parent = parent
    return corner
end

local function createUITextLabel(parent, size, pos, text, font, textSize, textColor, bgTransparency, alignX, alignY)
    local lbl = Instance.new("TextLabel")
    lbl.Size = size
    lbl.Position = pos or UDim2.new(0, 0, 0, 0)
    lbl.Text = text or ""
    lbl.Font = font or Enum.Font.Gotham
    lbl.TextSize = textSize or 14
    lbl.TextColor3 = textColor or Color3.new(1,1,1)
    lbl.BackgroundTransparency = bgTransparency or 1
    lbl.TextXAlignment = alignX or Enum.TextXAlignment.Left
    lbl.TextYAlignment = alignY or Enum.TextYAlignment.Center
    lbl.Parent = parent
    return lbl
end

-- Notification System
function MyRayLib:Notify(titleText, msgText, duration)
    local notif = Instance.new("Frame")
    notif.Size = UDim2.new(0, 300, 0, 80)
    notif.Position = UDim2.new(1, -320, 1, -100)
    notif.AnchorPoint = Vector2.new(1, 1)
    notif.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    notif.Parent = gui
    createUICorner(notif, 8)

    local title = createUITextLabel(notif, UDim2.new(1, -10, 0, 25), UDim2.new(0, 5, 0, 5), titleText, Enum.Font.GothamBold, 16, Color3.fromRGB(255,255,255), 1, Enum.TextXAlignment.Left)
    local message = createUITextLabel(notif, UDim2.new(1, -10, 0, 45), UDim2.new(0, 5, 0, 30), msgText, Enum.Font.Gotham, 14, Color3.fromRGB(200,200,200), 1, Enum.TextXAlignment.Left, Enum.TextYAlignment.Top)

    TweenService:Create(notif, TweenInfo.new(0.3), {Position = UDim2.new(1, -320, 1, -120)}):Play()

    task.delay(duration or 3, function()
        TweenService:Create(notif, TweenInfo.new(0.3), {Position = UDim2.new(1, 10, 1, -100)}):Play()
        task.wait(0.4)
        notif:Destroy()
    end)
end

-- Draggable helper function
local function makeDraggable(frame, dragArea)
    dragArea = dragArea or frame
    local dragging = false
    local dragInput
    local dragStart
    local startPos

    dragArea.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    dragArea.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(
                math.clamp(startPos.X.Scale, 0, 1),
                math.clamp(startPos.X.Offset + delta.X, 0, workspace.CurrentCamera.ViewportSize.X - frame.AbsoluteSize.X),
                math.clamp(startPos.Y.Scale, 0, 1),
                math.clamp(startPos.Y.Offset + delta.Y, 0, workspace.CurrentCamera.ViewportSize.Y - frame.AbsoluteSize.Y)
            )
        end
    end)
end

-- Main window creation
function MyRayLib:CreateWindow(config)
    local window = Instance.new("Frame")
    window.Size = UDim2.new(0, 520, 0, 400)
    window.Position = UDim2.new(0.5, -260, 0.5, -200)
    window.AnchorPoint = Vector2.new(0.5, 0.5)
    window.BackgroundColor3 = Color3.fromRGB(22, 22, 30)
    window.Parent = gui
    window.ClipsDescendants = true
    createUICorner(window, 10)

    -- Title bar
    local titleBar = Instance.new("Frame", window)
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    createUICorner(titleBar, 10)

    -- Title text
    local titleLabel = Instance.new("TextLabel", titleBar)
    titleLabel.Size = UDim2.new(1, -40, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.Text = config.Title or "Window"
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 18
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.TextYAlignment = Enum.TextYAlignment.Center

    -- Custom icon support (optional)
    local iconImage = nil
    if config.IconUrl then
        iconImage = Instance.new("ImageLabel", titleBar)
        iconImage.Size = UDim2.new(0, 28, 0, 28)
        iconImage.Position = UDim2.new(0, 8, 0, 6)
        iconImage.BackgroundTransparency = 1
        iconImage.Image = config.IconUrl
    end

    -- Close/Open button
    local toggleBtn = Instance.new("TextButton", titleBar)
    toggleBtn.Size = UDim2.new(0, 30, 0, 30)
    toggleBtn.Position = UDim2.new(1, -38, 0, 5)
    toggleBtn.Text = "×"
    toggleBtn.Font = Enum.Font.GothamBold
    toggleBtn.TextSize = 20
    toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    createUICorner(toggleBtn, 6)

    toggleBtn.MouseButton1Click:Connect(function()
        window.Visible = not window.Visible
    end)

    -- Tab container
    local tabContainer = Instance.new("Frame", window)
    tabContainer.Size = UDim2.new(1, 0, 1, -40)
    tabContainer.Position = UDim2.new(0, 0, 0, 40)
    tabContainer.BackgroundTransparency = 1

    local tabs = {}
    local tabButtons = {}

    -- Tab buttons container
    local tabButtonsFrame = Instance.new("Frame", titleBar)
    tabButtonsFrame.Size = UDim2.new(1, -80, 1, 0)
    tabButtonsFrame.Position = UDim2.new(0, 40, 0, 0)
    tabButtonsFrame.BackgroundTransparency = 1
    tabButtonsFrame.ClipsDescendants = true

    local UIListLayout = Instance.new("UIListLayout", tabButtonsFrame)
    UIListLayout.FillDirection = Enum.FillDirection.Horizontal
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 6)

    -- Create a tab
    function MyRayLib:CreateTab(name)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(0, 100, 1, 0)
        button.Text = name
        button.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
        button.Font = Enum.Font.Gotham
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Parent = tabButtonsFrame
        createUICorner(button, 6)

        local tab = Instance.new("ScrollingFrame")
        tab.Size = UDim2.new(1, 0, 1, 0)
        tab.CanvasSize = UDim2.new(0, 0, 0, 0)
        tab.BackgroundTransparency = 1
        tab.Visible = false
        tab.Parent = tabContainer

        local listLayout = Instance.new("UIListLayout", tab)
        listLayout.SortOrder = Enum.SortOrder.LayoutOrder
        listLayout.Padding = UDim.new(0, 8)

        button.MouseButton1Click:Connect(function()
            for _, t in pairs(tabs) do t.Visible = false end
            for _, b in pairs(tabButtons) do
                b.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
            end
            tab.Visible = true
            button.BackgroundColor3 = Color3.fromRGB(65, 65, 75)
        end)

        table.insert(tabs, tab)
        table.insert(tabButtons, button)

        local api = {}

        function api:AddLabel(text)
            local lbl = Instance.new("TextLabel")
            lbl.Size = UDim2.new(1, -20, 0, 30)
            lbl.Text = text
            lbl.TextColor3 = Color3.new(1, 1, 1)
            lbl.BackgroundTransparency = 1
            lbl.Font = Enum.Font.Gotham
            lbl.TextSize = 14
            lbl.TextWrapped = true
            lbl.Parent = tab
            return lbl
        end

        function api:AddToggle(info)
            local btn = Instance.new("TextButton")
            btn.Size = UDim2.new(1, -20, 0, 30)
            btn.Text = "[ ] " .. info.Name
            btn.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
            btn.TextColor3 = Color3.new(1, 1, 1)
            btn.Font = Enum.Font.Gotham
            btn.TextSize = 14
            btn.Parent = tab
            createUICorner(btn, 6)
            local state = info.Default or false
            btn.MouseButton1Click:Connect(function()
                state = not state
                btn.Text = (state and "[✓] " or "[ ] ") .. info.Name
                if info.Callback then
                    info.Callback(state)
                end
            end)
            return btn
        end

        function api:AddInput(info)
            local box = Instance.new("TextBox")
            box.Size = UDim2.new(1, -20, 0, 30)
            box.PlaceholderText = info.Placeholder or "Type here..."
            box.Text = ""
            box.Font = Enum.Font.Gotham
            box.TextSize = 14
            box.TextColor3 = Color3.new(1, 1, 1)
            box.BackgroundColor3 = Color3.fromRGB(55, 55, 65)
            createUICorner(box, 6)
            box.Parent = tab
            box.ClearTextOnFocus = false
            box.FocusLost:Connect(function(enter)
                if enter and info.Callback then
                    info.Callback(box.Text)
                end
            end)
            return box
        end

        function api:AddSlider(info)
            local sliderFrame = Instance.new("Frame")
            sliderFrame.Size = UDim2.new(1, -20, 0, 40)
            sliderFrame.BackgroundTransparency = 1
            sliderFrame.Parent = tab

            local label = Instance.new("TextLabel", sliderFrame)
            label.Size = UDim2.new(1, 0, 0, 20)
            label.BackgroundTransparency = 1
            label.Text = info.Name .. ": " .. tostring(info.Default)
            label.Font = Enum.Font.Gotham
            label.TextSize = 14
            label.TextColor3 = Color3.new(1, 1, 1)
            label.TextXAlignment = Enum.TextXAlignment.Left

            local sliderBar = Instance.new("Frame", sliderFrame)
            sliderBar.Size = UDim2.new(1, 0, 0, 10)
            sliderBar.Position = UDim2.new(0, 0, 0, 25)
            sliderBar.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
            createUICorner(sliderBar, 6)

            local sliderFill = Instance.new("Frame", sliderBar)
            sliderFill.Size = UDim2.new((info.Default - info.Min) / (info.Max - info.Min), 0, 1, 0)
            sliderFill.BackgroundColor3 = Color3.fromRGB(100, 100, 180)
            createUICorner(sliderFill, 6)

            local dragging = false
            sliderBar.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                end
            end)
            sliderBar.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            sliderBar.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    local relX = math.clamp(input.Position.X - sliderBar.AbsolutePosition.X, 0, sliderBar.AbsoluteSize.X)
                    local val = info.Min + (relX / sliderBar.AbsoluteSize.X) * (info.Max - info.Min)
                    val = math.floor(val)
                    sliderFill.Size = UDim2.new((val - info.Min) / (info.Max - info.Min), 0, 1, 0)
                    label.Text = info.Name .. ": " .. tostring(val)
                    if info.Callback then
                        info.Callback(val)
                    end
                end
            end)

            return sliderFrame
        end

        return api
    end

    -- Show first tab automatically if exists
    task.spawn(function()
        task.wait(0.1)
        if #tabButtons > 0 then
            tabButtons[1].MouseButton1Click:Wait()
        end
    end)

    makeDraggable(window, titleBar)

    return window
end

-- Toggle UI keybind (RightCtrl)
UserInputService.InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.RightControl then
        gui.Enabled = not gui.Enabled
    end
end)

return MyRayLib
